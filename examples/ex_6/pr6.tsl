LET (blank : String = EMPTY tile1.tl) IN {
	LET (row1 : String = FOR (COL, i : Int = 0, i < 18, ASC) DO { CONCAT tile1.tl (CONCAT tile2.tl tile3.tl)} ) IN {
		LET (row2 : String = FOR (COL, i : Int = 0, i < 18, ASC) DO { CONCAT tile2.tl (CONCAT tile3.tl tile1.tl)} ) IN {
			LET (row3 : String = FOR (COL, i : Int = 0, i < 19, ASC) DO { CONCAT tile3.tl (CONCAT tile1.tl tile2.tl)} ) IN {
				LET (row4 : String = FOR (COL, i : Int = 0, i < 19, ASC) DO { CONCAT tile2.tl (CONCAT tile3.tl tile1.tl)} ) IN {
					LET (row5 : String = FOR (COL, i : Int = 0, i < 19, ASC) DO { CONCAT tile1.tl (CONCAT tile2.tl tile3.tl)} ) IN {
						LET (row6 : String = FOR (COL, i : Int = 0, i < 18, ASC) DO { CONCAT tile1.tl (CONCAT tile2.tl tile3.tl)} ) IN {
							LET (row7 : String = FOR (COL, i : Int = 0, i < 18, ASC) DO { CONCAT tile3.tl (CONCAT tile1.tl tile2.tl)} ) IN {
								LET (rows : String = FOR (ROW, i : Int = 0, i < 17, ASC) DO { STACK row3 (STACK row4 row5) }) IN {
									LET (top : String = (STACK (CONCAT (CONCAT (CONCAT blank blank) row1) tile1.tl) (CONCAT (CONCAT blank row2) (CONCAT tile2.tl tile3.tl)))) IN {
										LET (row8 : String = FOR (COL, i : Int = 0, i < 18, ASC) DO { CONCAT tile3.tl (CONCAT tile1.tl tile2.tl)} ) IN {
											STACK (STACK top (STACK rows (STACK row3 row4))) (STACK (CONCAT (CONCAT (CONCAT row1 tile1.tl) tile2.tl) blank) (CONCAT (CONCAT row8 tile3.tl) (CONCAT blank blank)))
										} 
									}
								}
							}
						}
					}
				}
			}
		}   
	}   
}
